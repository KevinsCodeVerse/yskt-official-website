{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n  return ar;\n};\nimport { regionUphostMap } from '../config';\nimport { DEFAULT_CHUNK_SIZE } from '../upload';\nexport function normalizeUploadConfig(config, logger) {\n  var _a = __assign({}, config),\n    upprotocol = _a.upprotocol,\n    uphost = _a.uphost,\n    otherConfig = __rest(_a, [\"upprotocol\", \"uphost\"]);\n  var normalizeConfig = __assign({\n    uphost: [],\n    retryCount: 3,\n    checkByMD5: false,\n    forceDirect: false,\n    useCdnDomain: true,\n    checkByServer: false,\n    concurrentRequestLimit: 3,\n    chunkSize: DEFAULT_CHUNK_SIZE,\n    upprotocol: 'https',\n    debugLogLevel: 'OFF',\n    disableStatisticsReport: false\n  }, otherConfig);\n  // 兼容原来的 http: https: 的写法\n  if (upprotocol) {\n    normalizeConfig.upprotocol = upprotocol.replace(/:$/, '');\n  }\n  var hostList = [];\n  if (logger && (config === null || config === void 0 ? void 0 : config.uphost) != null && (config === null || config === void 0 ? void 0 : config.region) != null) {\n    logger.warn('do not use both the uphost and region config.');\n  }\n  // 如果同时指定了 uphost 参数，添加到可用 host 列表\n  if (uphost) {\n    if (Array.isArray(uphost)) {\n      hostList.push.apply(hostList, __spread(uphost));\n    } else {\n      hostList.push(uphost);\n    }\n    // 否则如果用户传了 region，添加指定 region 的 host 到可用 host 列表\n  } else if (normalizeConfig === null || normalizeConfig === void 0 ? void 0 : normalizeConfig.region) {\n    var hostMap = regionUphostMap[normalizeConfig === null || normalizeConfig === void 0 ? void 0 : normalizeConfig.region];\n    if (normalizeConfig.useCdnDomain) {\n      hostList.push.apply(hostList, __spread(hostMap.cdnUphost));\n    } else {\n      hostList.push.apply(hostList, __spread(hostMap.srcUphost));\n    }\n  }\n  return __assign(__assign({}, normalizeConfig), {\n    uphost: hostList.filter(Boolean)\n  });\n}","map":{"version":3,"names":["regionUphostMap","DEFAULT_CHUNK_SIZE","normalizeUploadConfig","config","logger","_a","__assign","upprotocol","uphost","otherConfig","__rest","normalizeConfig","retryCount","checkByMD5","forceDirect","useCdnDomain","checkByServer","concurrentRequestLimit","chunkSize","debugLogLevel","disableStatisticsReport","replace","hostList","region","warn","Array","isArray","push","apply","__spread","hostMap","cdnUphost","srcUphost","filter","Boolean"],"sources":["../../src/utils/config.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,eAAe,QAAQ,WAAW;AAC3C,SAAiBC,kBAAkB,QAAwB,WAAW;AAEtE,OAAM,SAAUC,qBAAqBA,CAACC,MAAwB,EAAEC,MAAe;EAC7E,IAAMC,EAAA,GAAAC,QAAA,KAA8CH,MAAM,CAAE;IAApDI,UAAU,GAAAF,EAAA,CAAAE,UAAA;IAAEC,MAAM,GAAAH,EAAA,CAAAG,MAAA;IAAKC,WAAW,GAAAC,MAAA,CAAAL,EAAA,EAApC,wBAAsC,CAAgB;EAE5D,IAAMM,eAAe,GAAAL,QAAA;IACnBE,MAAM,EAAE,EAAE;IACVI,UAAU,EAAE,CAAC;IAEbC,UAAU,EAAE,KAAK;IACjBC,WAAW,EAAE,KAAK;IAClBC,YAAY,EAAE,IAAI;IAClBC,aAAa,EAAE,KAAK;IACpBC,sBAAsB,EAAE,CAAC;IACzBC,SAAS,EAAEjB,kBAAkB;IAE7BM,UAAU,EAAE,OAAO;IAEnBY,aAAa,EAAE,KAAK;IACpBC,uBAAuB,EAAE;EAAK,GAE3BX,WAAW,CACf;EAED;EACA,IAAIF,UAAU,EAAE;IACdI,eAAe,CAACJ,UAAU,GAAGA,UAAU,CACpCc,OAAO,CAAC,IAAI,EAAE,EAAE,CAAiC;;EAGtD,IAAMC,QAAQ,GAAa,EAAE;EAE7B,IAAIlB,MAAM,IAAI,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEK,MAAM,KAAI,IAAI,IAAI,CAAAL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEoB,MAAM,KAAI,IAAI,EAAE;IAC9DnB,MAAM,CAACoB,IAAI,CAAC,+CAA+C,CAAC;;EAG9D;EACA,IAAIhB,MAAM,EAAE;IACV,IAAIiB,KAAK,CAACC,OAAO,CAAClB,MAAM,CAAC,EAAE;MACzBc,QAAQ,CAACK,IAAI,CAAAC,KAAA,CAAbN,QAAQ,EAAAO,QAAA,CAASrB,MAAM;KACxB,MAAM;MACLc,QAAQ,CAACK,IAAI,CAACnB,MAAM,CAAC;;IAGvB;GACD,MAAM,IAAIG,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEY,MAAM,EAAE;IAClC,IAAMO,OAAO,GAAG9B,eAAe,CAACW,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEY,MAAM,CAAC;IACxD,IAAIZ,eAAe,CAACI,YAAY,EAAE;MAChCO,QAAQ,CAACK,IAAI,CAAAC,KAAA,CAAbN,QAAQ,EAAAO,QAAA,CAASC,OAAO,CAACC,SAAS;KACnC,MAAM;MACLT,QAAQ,CAACK,IAAI,CAAAC,KAAA,CAAbN,QAAQ,EAAAO,QAAA,CAASC,OAAO,CAACE,SAAS;;;EAItC,OAAA1B,QAAA,CAAAA,QAAA,KACKK,eAAe;IAClBH,MAAM,EAAEc,QAAQ,CAACW,MAAM,CAACC,OAAO;EAAC;AAEpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
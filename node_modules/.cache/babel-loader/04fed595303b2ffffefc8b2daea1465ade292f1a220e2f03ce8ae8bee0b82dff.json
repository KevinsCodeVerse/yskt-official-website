{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n  return ar;\n};\nimport { getUpHosts } from '../api';\n/**\n  * @description 解冻时间，key 是 host，value 为解冻时间\n  */\nvar unfreezeTimeMap = new Map();\nvar Host = /** @class */function () {\n  function Host(host, protocol) {\n    this.host = host;\n    this.protocol = protocol;\n  }\n  /**\n   * @description 当前 host 是否为冻结状态\n   */\n  Host.prototype.isFrozen = function () {\n    var currentTime = new Date().getTime();\n    var unfreezeTime = unfreezeTimeMap.get(this.host);\n    return unfreezeTime != null && unfreezeTime >= currentTime;\n  };\n  /**\n   * @param  {number} time 单位秒，默认 20s\n   * @description 冻结该 host 对象，该 host 将在指定时间内不可用\n   */\n  Host.prototype.freeze = function (time) {\n    if (time === void 0) {\n      time = 20;\n    }\n    var unfreezeTime = new Date().getTime() + time * 1000;\n    unfreezeTimeMap.set(this.host, unfreezeTime);\n  };\n  /**\n   * @description 解冻该 host\n   */\n  Host.prototype.unfreeze = function () {\n    unfreezeTimeMap[\"delete\"](this.host);\n  };\n  /**\n   * @description 获取当前 host 的完整 url\n   */\n  Host.prototype.getUrl = function () {\n    return this.protocol + \"://\" + this.host;\n  };\n  /**\n   * @description 获取解冻时间\n   */\n  Host.prototype.getUnfreezeTime = function () {\n    return unfreezeTimeMap.get(this.host);\n  };\n  return Host;\n}();\nexport { Host };\nvar HostPool = /** @class */function () {\n  /**\n   * @param  {string[]} initHosts\n   * @description 如果在构造时传入 initHosts，则该 host 池始终使用传入的 initHosts 做为可用的数据\n   */\n  function HostPool(initHosts) {\n    if (initHosts === void 0) {\n      initHosts = [];\n    }\n    this.initHosts = initHosts;\n    /**\n     * @description 缓存的 host 表，以 bucket 和 accessKey 作为 key\n     */\n    this.cachedHostsMap = new Map();\n  }\n  /**\n   * @param  {string} accessKey\n   * @param  {string} bucketName\n   * @param  {string[]} hosts\n   * @param  {InternalConfig['upprotocol']} protocol\n   * @returns  {void}\n   * @description 注册可用 host\n   */\n  HostPool.prototype.register = function (accessKey, bucketName, hosts, protocol) {\n    this.cachedHostsMap.set(accessKey + \"@\" + bucketName, hosts.map(function (host) {\n      return new Host(host, protocol);\n    }));\n  };\n  /**\n   * @param  {string} accessKey\n   * @param  {string} bucketName\n   * @param  {InternalConfig['upprotocol']} protocol\n   * @returns  {Promise<void>}\n   * @description 刷新最新的 host 数据，如果用户在构造时该类时传入了 host 或者已经存在缓存则不会发起请求\n   */\n  HostPool.prototype.refresh = function (accessKey, bucketName, protocol) {\n    var _a, _b, _c, _d;\n    return __awaiter(this, void 0, void 0, function () {\n      var cachedHostList, response, stashHosts;\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            cachedHostList = this.cachedHostsMap.get(accessKey + \"@\" + bucketName) || [];\n            if (cachedHostList.length > 0) return [2 /*return*/];\n            if (this.initHosts.length > 0) {\n              this.register(accessKey, bucketName, this.initHosts, protocol);\n              return [2 /*return*/];\n            }\n            return [4 /*yield*/, getUpHosts(accessKey, bucketName, protocol)];\n          case 1:\n            response = _e.sent();\n            if ((response === null || response === void 0 ? void 0 : response.data) != null) {\n              stashHosts = __spread(((_b = (_a = response.data.up) === null || _a === void 0 ? void 0 : _a.acc) === null || _b === void 0 ? void 0 : _b.main) || [], ((_d = (_c = response.data.up) === null || _c === void 0 ? void 0 : _c.acc) === null || _d === void 0 ? void 0 : _d.backup) || []);\n              this.register(accessKey, bucketName, stashHosts, protocol);\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * @param  {string} accessKey\n   * @param  {string} bucketName\n   * @param  {InternalConfig['upprotocol']} protocol\n   * @returns  {Promise<Host | null>}\n   * @description 获取一个可用的上传 Host，排除已冻结的\n   */\n  HostPool.prototype.getUp = function (accessKey, bucketName, protocol) {\n    return __awaiter(this, void 0, void 0, function () {\n      var cachedHostList, availableHostList, priorityQueue;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.refresh(accessKey, bucketName, protocol)];\n          case 1:\n            _a.sent();\n            cachedHostList = this.cachedHostsMap.get(accessKey + \"@\" + bucketName) || [];\n            if (cachedHostList.length === 0) return [2 /*return*/, null];\n            availableHostList = cachedHostList.filter(function (host) {\n              return !host.isFrozen();\n            });\n            if (availableHostList.length > 0) return [2 /*return*/, availableHostList[0]\n            // 无可用的，去取离解冻最近的 host\n            ];\n            priorityQueue = cachedHostList.slice().sort(function (hostA, hostB) {\n              return (hostA.getUnfreezeTime() || 0) - (hostB.getUnfreezeTime() || 0);\n            });\n            return [2 /*return*/, priorityQueue[0]];\n        }\n      });\n    });\n  };\n  return HostPool;\n}();\nexport { HostPool };","map":{"version":3,"names":["getUpHosts","unfreezeTimeMap","Map","Host","host","protocol","prototype","isFrozen","currentTime","Date","getTime","unfreezeTime","get","freeze","time","set","unfreeze","getUrl","getUnfreezeTime","HostPool","initHosts","cachedHostsMap","register","accessKey","bucketName","hosts","map","refresh","cachedHostList","length","response","_e","sent","data","stashHosts","__spread","_b","_a","up","acc","main","_d","_c","backup","getUp","availableHostList","filter","priorityQueue","slice","sort","hostA","hostB"],"sources":["../../src/upload/hosts.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport router from '@/router';\nimport axios from 'axios';\nimport { Message } from 'element-ui';\n\n// 创建一个axios实例\nvar http = axios.create({\n  baseURL: '/apiV2/',\n  // baseURL: '/api/',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n});\n\n// 请求拦截器\nhttp.interceptors.request.use(function (config) {\n  // 在请求发送之前做一些处理\n  var token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = token;\n  }\n\n  // 添加自定义的User-Agent头部\n  // const userAgent = window.navigator.userAgent\n  // config.headers['User-Agent'] = userAgent\n\n  return config;\n}, function (error) {\n  // 处理请求错误\n  console.error(error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nhttp.interceptors.response.use(function (response) {\n  // console.log(response, \"response\");\n  var res = response.data;\n  if (res.code == 0) {\n    return response.data;\n  } else if (res.code == 15) {\n    Message.error(res.result);\n    localStorage.clear();\n    router.push(\"/loginIndex\");\n  } else {\n    console.log(res, \"adfas\");\n    Message.error(res.result);\n    return Promise.reject(new Error(res && res.result || \"系统错误\"));\n  }\n  // 在这里对后端返回的数据进行处理\n}, function (error) {\n  // console.log(error, \"error\");\n  var errRes = error.response;\n  if (errRes.status == 401) {\n    console.log(errRes.data, \"error.....\");\n    Message.error(\"登录失效\");\n    localStorage.clear();\n    router.push(\"/loginIndex\");\n    return Promise.reject(\"登录失效\");\n  }\n  // 在这里对请求错误进行处理\n});\nexport default http;","map":{"version":3,"names":["router","axios","Message","http","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","console","Promise","reject","response","res","data","code","result","clear","push","log","Error","errRes","status"],"sources":["/Users/fjw/Desktop/yskt/yskt-official-website/src/common/request.js"],"sourcesContent":["import router from '@/router'\nimport axios from 'axios'\nimport { Message } from 'element-ui'\n\n// 创建一个axios实例\nconst http = axios.create({\n  baseURL: '/apiV2/',\n  // baseURL: '/api/',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n})\n\n// 请求拦截器\nhttp.interceptors.request.use(\n  config => {\n    // 在请求发送之前做一些处理\n    const token = localStorage.getItem('token')\n    if (token) {\n      config.headers.Authorization = token\n    }\n\n\n    // 添加自定义的User-Agent头部\n    // const userAgent = window.navigator.userAgent\n    // config.headers['User-Agent'] = userAgent\n\n    return config\n  },\n  error => {\n    // 处理请求错误\n    console.error(error)\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截器\nhttp.interceptors.response.use(\n  response => {\n    // console.log(response, \"response\");\n    const res = response.data\n    if (res.code == 0) {\n      return response.data;\n    } else if (res.code == 15) {\n      Message.error(res.result)\n      localStorage.clear()\n      router.push(\"/loginIndex\")\n    } else {\n      console.log(res, \"adfas\");\n      Message.error(res.result)\n      return Promise.reject(new Error((res && res.result) || \"系统错误\"))\n    }\n    // 在这里对后端返回的数据进行处理\n\n  },\n  error => {\n    // console.log(error, \"error\");\n    const errRes = error.response\n    if (errRes.status == 401) {\n      console.log(errRes.data, \"error.....\");\n      Message.error(\"登录失效\")\n      localStorage.clear()\n      router.push(\"/loginIndex\")\n      return Promise.reject(\"登录失效\")\n    }\n    // 在这里对请求错误进行处理\n\n  }\n)\n\nexport default http\n"],"mappings":";;;;AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,YAAY;;AAEpC;AACA,IAAMC,IAAI,GAAGF,KAAK,CAACG,MAAM,CAAC;EACxBC,OAAO,EAAE,SAAS;EAClB;EACAC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,IAAI,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC3B,UAAAC,MAAM,EAAI;EACR;EACA,IAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAGH,KAAK;EACtC;;EAGA;EACA;EACA;;EAEA,OAAOD,MAAM;AACf,CAAC,EACD,UAAAK,KAAK,EAAI;EACP;EACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACpB,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAb,IAAI,CAACK,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC5B,UAAAU,QAAQ,EAAI;EACV;EACA,IAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAI;EACzB,IAAID,GAAG,CAACE,IAAI,IAAI,CAAC,EAAE;IACjB,OAAOH,QAAQ,CAACE,IAAI;EACtB,CAAC,MAAM,IAAID,GAAG,CAACE,IAAI,IAAI,EAAE,EAAE;IACzBrB,OAAO,CAACc,KAAK,CAACK,GAAG,CAACG,MAAM,CAAC;IACzBX,YAAY,CAACY,KAAK,CAAC,CAAC;IACpBzB,MAAM,CAAC0B,IAAI,CAAC,aAAa,CAAC;EAC5B,CAAC,MAAM;IACLT,OAAO,CAACU,GAAG,CAACN,GAAG,EAAE,OAAO,CAAC;IACzBnB,OAAO,CAACc,KAAK,CAACK,GAAG,CAACG,MAAM,CAAC;IACzB,OAAON,OAAO,CAACC,MAAM,CAAC,IAAIS,KAAK,CAAEP,GAAG,IAAIA,GAAG,CAACG,MAAM,IAAK,MAAM,CAAC,CAAC;EACjE;EACA;AAEF,CAAC,EACD,UAAAR,KAAK,EAAI;EACP;EACA,IAAMa,MAAM,GAAGb,KAAK,CAACI,QAAQ;EAC7B,IAAIS,MAAM,CAACC,MAAM,IAAI,GAAG,EAAE;IACxBb,OAAO,CAACU,GAAG,CAACE,MAAM,CAACP,IAAI,EAAE,YAAY,CAAC;IACtCpB,OAAO,CAACc,KAAK,CAAC,MAAM,CAAC;IACrBH,YAAY,CAACY,KAAK,CAAC,CAAC;IACpBzB,MAAM,CAAC0B,IAAI,CAAC,aAAa,CAAC;IAC1B,OAAOR,OAAO,CAACC,MAAM,CAAC,MAAM,CAAC;EAC/B;EACA;AAEF,CACF,CAAC;AAED,eAAehB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _regeneratorRuntime from \"/Users/fjw/Desktop/yskt/yskt-official-website/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/fjw/Desktop/yskt/yskt-official-website/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n// import { transformBlobToImage } from \"@/api/common\"\n// import { showImageOrPdf } from \"@/api/download\"\nimport { getUpToken } from \"@/common/api\";\nimport * as qiniu from \"qiniu-js\";\nimport env from \"@/envConfig\";\nexport default {\n  name: \"uploadImage\",\n  model: {\n    prop: \"fileValue\",\n    event: \"update:fileValue\"\n  },\n  props: {\n    fileValue: [Array, String, File],\n    limit: {\n      type: Number,\n      \"default\": 1\n    }\n  },\n  data: function data() {\n    return {\n      fileList: [],\n      dialogImageUrl: \"\",\n      dialogVisible: false,\n      disabled: false,\n      removeList: [],\n      prev: \"\"\n    };\n  },\n  components: {\n    \"el-image-viewer\": function elImageViewer() {\n      return import(\"element-ui/packages/image/src/image-viewer.vue\");\n    }\n  },\n  created: function created() {\n    this.initImagePrev();\n  },\n  mounted: function mounted() {},\n  methods: {\n    //上传图片触发\n    handleChange: function handleChange(e, list) {\n      var valid = this.beforeUpload(list[list.length - 1].raw);\n      this.handleUpload(e);\n      if (valid) {\n        this.fileList = list;\n        // if (this.limit > 1) {\n        //   const fileData = this.fileList\n        //     .filter((item) => item.raw)\n        //     .map((item) => item.raw);\n        //   this.$emit(\"update:fileValue\", fileData);\n        // } else {\n        this.$emit(\"update:fileValue\", this.fileList);\n        // }\n      } else {\n        this.fileList = [];\n      }\n    },\n    // 删除图片触发\n    onRemove: function onRemove() {\n      this.fileList = [];\n      this.$emit(\"update:fileValue\", \"\");\n    },\n    handleRemove: function handleRemove(file) {\n      var index = this.fileList.findIndex(function (item) {\n        return item.url === file.url;\n      });\n      if (index !== -1) {\n        this.fileList.splice(index, 1);\n      } else {\n        this.fileList = [];\n      }\n      this.$emit(\"update:fileValue\", this.fileList);\n    },\n    //查看图片\n    handlePictureCardPreview: function handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    beforeUpload: function beforeUpload(file) {\n      var isImg = [\"image/png\", \"image/jpg\", \"image/jpeg\", \"image/gif\"].includes(file.type);\n      var isLtM = file.size / 1024 / 1024 < 5;\n      if (!isImg) {\n        this.$message.warning(\"只能上传jpg/png文件\");\n        return false;\n      }\n      if (!isLtM) {\n        this.$message.warning(\"大小不能超过5M\");\n        return false;\n      }\n      this.handleUpload(file);\n      return false;\n    },\n    handleUpload: function handleUpload(file) {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res, observable;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getUpToken();\n            case 3:\n              res = _context.sent;\n              observable = qiniu.upload(file, null, res.result);\n              observable.subscribe({\n                next: undefined,\n                error: function error() {\n                  _this.$message.error(\"上传出错，请重新上传！\");\n                },\n                complete: function complete(_ref) {\n                  var key = _ref.key;\n                  _this.$message.success(\"上传成功！\");\n                  _this.fileList.push({\n                    name: _this.fileList.length + \"\",\n                    url: env.qiniuDomain + key\n                  });\n                  console.log(_this.fileList, \"dfasdfas....\");\n                  _this.$emit(\"update:fileValue\", _this.fileList);\n                }\n              });\n              _context.next = 11;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 8]]);\n      }))();\n    },\n    initImagePrev: function initImagePrev() {\n      if (Array.isArray(this.fileValue)) {\n        this.fileList = this.fileValue;\n      } else {\n        if (this.fileValue && typeof this.fileValue === \"string\") {\n          this.fileList = [{\n            url: this.fileValue,\n            name: \"image01\"\n          }];\n        } else {\n          this.fileList = [];\n        }\n      }\n    }\n  },\n  watch: {\n    fileValue: function fileValue() {\n      this.initImagePrev();\n    }\n  }\n};","map":{"version":3,"names":["getUpToken","qiniu","env","name","model","prop","event","props","fileValue","Array","String","File","limit","type","Number","data","fileList","dialogImageUrl","dialogVisible","disabled","removeList","prev","components","elImageViewer","created","initImagePrev","mounted","methods","handleChange","e","list","valid","beforeUpload","length","raw","handleUpload","$emit","onRemove","handleRemove","file","index","findIndex","item","url","splice","handlePictureCardPreview","isImg","includes","isLtM","size","$message","warning","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","observable","wrap","_callee$","_context","next","sent","upload","result","subscribe","undefined","error","complete","_ref","key","success","push","qiniuDomain","console","log","t0","stop","isArray","watch"],"sources":["src/components/uploadImage.vue"],"sourcesContent":["<template>\n  <div class=\"uploadImage\">\n    {{ fileList.length }}\n    <el-upload\n      action=\"#\"\n      list-type=\"picture-card\"\n      :limit=\"limit\"\n      :auto-upload=\"true\"\n      :before-upload=\"beforeUpload\"\n      accept=\".jpg,.jpeg,.png,.gif\"\n      :file-list=\"fileList\"\n      :class=\"fileList.length < limit ? '' : 'hiddenImage'\"\n    >\n      <i slot=\"default\" class=\"el-icon-plus\"></i>\n      <div slot=\"file\" slot-scope=\"{ file }\">\n        <img class=\"el-upload-list__item-thumbnail\" :src=\"file.url\" alt=\"\" />\n        <span class=\"el-upload-list__item-actions\">\n          <span\n            class=\"el-upload-list__item-preview\"\n            @click=\"handlePictureCardPreview(file)\"\n          >\n            <i class=\"el-icon-zoom-in\"></i>\n          </span>\n          <span class=\"el-upload-list__item-delete\" @click=\"handleRemove(file)\">\n            <i class=\"el-icon-delete\"></i>\n          </span>\n        </span>\n      </div>\n      <div\n        slot=\"tip\"\n        class=\"el-upload__tip\"\n        :style=\"{ left: fileList.length * 148 + 'px' }\"\n        v-if=\"fileList.length < limit\"\n      >\n        只能上传jpg/png文件，且不超过1M\n      </div>\n    </el-upload>\n    <el-image-viewer\n      v-if=\"dialogVisible\"\n      :z-index=\"5000\"\n      :on-close=\"() => (dialogVisible = false)\"\n      :url-list=\"[dialogImageUrl]\"\n    ></el-image-viewer>\n  </div>\n</template>\n\n<script>\n// import { transformBlobToImage } from \"@/api/common\"\n// import { showImageOrPdf } from \"@/api/download\"\nimport { getUpToken } from \"@/common/api\";\nimport * as qiniu from \"qiniu-js\";\nimport env from \"@/envConfig\";\nexport default {\n  name: \"uploadImage\",\n  model: {\n    prop: \"fileValue\",\n    event: \"update:fileValue\",\n  },\n  props: {\n    fileValue: [Array, String, File],\n    limit: {\n      type: Number,\n      default: 1,\n    },\n  },\n  data() {\n    return {\n      fileList: [],\n      dialogImageUrl: \"\",\n      dialogVisible: false,\n      disabled: false,\n      removeList: [],\n      prev: \"\",\n    };\n  },\n  components: {\n    \"el-image-viewer\": () =>\n      import(\"element-ui/packages/image/src/image-viewer.vue\"),\n  },\n  created() {\n    this.initImagePrev();\n  },\n  mounted() {},\n  methods: {\n    //上传图片触发\n    handleChange(e, list) {\n      const valid = this.beforeUpload(list[list.length - 1].raw);\n      this.handleUpload(e);\n      if (valid) {\n        this.fileList = list;\n        // if (this.limit > 1) {\n        //   const fileData = this.fileList\n        //     .filter((item) => item.raw)\n        //     .map((item) => item.raw);\n        //   this.$emit(\"update:fileValue\", fileData);\n        // } else {\n          this.$emit(\"update:fileValue\", this.fileList);\n        // }\n      } else {\n        this.fileList = [];\n      }\n    },\n    // 删除图片触发\n    onRemove() {\n      this.fileList = [];\n      this.$emit(\"update:fileValue\", \"\");\n    },\n    handleRemove(file) {\n  \n      const index = this.fileList.findIndex((item) => item.url === file.url);\n      if (index !== -1) {\n        this.fileList.splice(index, 1);\n      } else {\n        this.fileList = [];\n      }\n      this.$emit(\"update:fileValue\", this.fileList);\n    },\n    //查看图片\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    beforeUpload(file) {\n      const isImg = [\n        \"image/png\",\n        \"image/jpg\",\n        \"image/jpeg\",\n        \"image/gif\",\n      ].includes(file.type);\n      const isLtM = file.size / 1024 / 1024 < 5;\n      if (!isImg) {\n        this.$message.warning(\"只能上传jpg/png文件\");\n        return false;\n      }\n      if (!isLtM) {\n        this.$message.warning(\"大小不能超过5M\");\n        return false;\n      }\n      this.handleUpload(file);\n      return false;\n    },\n    async handleUpload(file) {\n      try {\n        const res = await getUpToken();\n        const observable = qiniu.upload(file, null, res.result);\n        observable.subscribe({\n          next: undefined,\n          error: () => {\n            this.$message.error(\"上传出错，请重新上传！\");\n          },\n          complete: ({ key }) => {\n            this.$message.success(\"上传成功！\");\n            this.fileList.push({\n              name: this.fileList.length + \"\",\n              url: env.qiniuDomain + key,\n            });\n            console.log(this.fileList, \"dfasdfas....\");\n            this.$emit(\"update:fileValue\", this.fileList);\n          },\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    initImagePrev() {\n      if (Array.isArray(this.fileValue)) {\n        this.fileList = this.fileValue;\n      } else {\n        if (this.fileValue && typeof this.fileValue === \"string\") {\n          this.fileList = [\n            {\n              url: this.fileValue,\n              name: \"image01\",\n            },\n          ];\n        } else {\n          this.fileList = [];\n        }\n      }\n    },\n  },\n  watch: {\n    fileValue() {\n      this.initImagePrev();\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.uploadImage {\n  div {\n    display: flex;\n  }\n  /deep/.el-upload-list--picture-card {\n    display: flex;\n  }\n  /deep/.el-upload-list__item {\n    display: flex;\n    min-width: 148px;\n  }\n  /deep/ .hiddenImage .el-upload--picture-card {\n    display: none;\n  }\n\n  /deep/ .el-upload-list--picture-card .el-upload-list__item {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  /deep/ .hiddenUpload .el-upload-list--picture-card {\n    display: none;\n  }\n\n  /deep/.el-upload--picture-card {\n    background-color: transparent !important;\n  }\n\n  /deep/.el-upload-list--picture-card .el-upload-list__item {\n    background-color: transparent !important;\n  }\n  /deep/.el-upload__tip {\n    color: #fff;\n    position: absolute;\n    bottom: -30px;\n    left: 0;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
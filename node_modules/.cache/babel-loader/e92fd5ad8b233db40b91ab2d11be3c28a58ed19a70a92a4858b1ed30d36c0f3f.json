{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.create.js\";\nimport \"core-js/modules/es.object.proto.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport { uploadChunk, uploadComplete, initUploadParts } from '../api';\nimport { QiniuError, QiniuErrorName, QiniuRequestError } from '../errors';\nimport * as utils from '../utils';\nimport Base from './base';\n/** 是否为正整数 */\nfunction isPositiveInteger(n) {\n  var re = /^[1-9]\\d*$/;\n  return re.test(String(n));\n}\nvar Resume = /** @class */function (_super) {\n  __extends(Resume, _super);\n  function Resume() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @returns  {Promise<ResponseSuccess<any>>}\n   * @description 实现了 Base 的 run 接口，处理具体的分片上传事务，并抛出过程中的异常。\n   */\n  Resume.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var pool, mkFileResponse, localKey, uploadChunks, error_1;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.info('start run Resume.');\n            if (!this.config.chunkSize || !isPositiveInteger(this.config.chunkSize)) {\n              throw new QiniuError(QiniuErrorName.InvalidChunkSize, 'chunkSize must be a positive integer');\n            }\n            if (this.config.chunkSize > 1024) {\n              throw new QiniuError(QiniuErrorName.InvalidChunkSize, 'chunkSize maximum value is 1024');\n            }\n            return [4 /*yield*/, this.initBeforeUploadChunks()];\n          case 1:\n            _a.sent();\n            pool = new utils.Pool(function (chunkInfo) {\n              return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      if (this.aborted) {\n                        pool.abort();\n                        throw new Error('pool is aborted');\n                      }\n                      return [4 /*yield*/, this.uploadChunk(chunkInfo)];\n                    case 1:\n                      _a.sent();\n                      return [2 /*return*/];\n                  }\n                });\n              });\n            }, this.config.concurrentRequestLimit);\n            mkFileResponse = null;\n            localKey = this.getLocalKey();\n            uploadChunks = this.chunks.map(function (chunk, index) {\n              return pool.enqueue({\n                chunk: chunk,\n                index: index\n              });\n            });\n            _a.label = 2;\n          case 2:\n            _a.trys.push([2, 5,, 6]);\n            return [4 /*yield*/, Promise.all(uploadChunks)];\n          case 3:\n            _a.sent();\n            return [4 /*yield*/, this.mkFileReq()];\n          case 4:\n            mkFileResponse = _a.sent();\n            return [3 /*break*/, 6];\n          case 5:\n            error_1 = _a.sent();\n            // uploadId 无效，上传参数有误（多由于本地存储信息的 uploadId 失效）\n            if (error_1 instanceof QiniuRequestError && (error_1.code === 612 || error_1.code === 400)) {\n              utils.removeLocalFileInfo(localKey, this.logger);\n            }\n            throw error_1;\n          case 6:\n            // 上传成功，清理本地缓存数据\n            utils.removeLocalFileInfo(localKey, this.logger);\n            return [2 /*return*/, mkFileResponse];\n        }\n      });\n    });\n  };\n  Resume.prototype.uploadChunk = function (chunkInfo) {\n    return __awaiter(this, void 0, void 0, function () {\n      var index, chunk, cachedInfo, shouldCheckMD5, reuseSaved, md5, onProgress, requestOptions, response;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            index = chunkInfo.index, chunk = chunkInfo.chunk;\n            cachedInfo = this.cachedUploadedList[index];\n            this.logger.info(\"upload part \" + index + \", cache:\", cachedInfo);\n            shouldCheckMD5 = this.config.checkByMD5;\n            reuseSaved = function reuseSaved() {\n              _this.usedCacheList[index] = true;\n              _this.updateChunkProgress(chunk.size, index);\n              _this.uploadedList[index] = cachedInfo;\n              _this.updateLocalCache();\n            };\n            // FIXME: 至少判断一下 size\n            if (cachedInfo && !shouldCheckMD5) {\n              reuseSaved();\n              return [2 /*return*/];\n            }\n            return [4 /*yield*/, utils.computeMd5(chunk)];\n          case 1:\n            md5 = _a.sent();\n            this.logger.info('computed part md5.', md5);\n            if (cachedInfo && md5 === cachedInfo.md5) {\n              reuseSaved();\n              return [2 /*return*/];\n            }\n            // 没有使用缓存设置标记为 false\n            this.usedCacheList[index] = false;\n            onProgress = function onProgress(data) {\n              _this.updateChunkProgress(data.loaded, index);\n            };\n            requestOptions = {\n              body: chunk,\n              md5: this.config.checkByServer ? md5 : undefined,\n              onProgress: onProgress,\n              onCreate: function onCreate(xhr) {\n                return _this.addXhr(xhr);\n              }\n            };\n            this.logger.info(\"part \" + index + \" start uploading.\");\n            return [4 /*yield*/, uploadChunk(this.token, this.key, chunkInfo.index + 1, this.getUploadInfo(), requestOptions)];\n          case 2:\n            response = _a.sent();\n            this.logger.info(\"part \" + index + \" upload completed.\");\n            // 在某些浏览器环境下，xhr 的 progress 事件无法被触发，progress 为 null，这里在每次分片上传完成后都手动更新下 progress\n            onProgress({\n              loaded: chunk.size,\n              total: chunk.size\n            });\n            this.uploadedList[index] = {\n              etag: response.data.etag,\n              md5: response.data.md5,\n              size: chunk.size\n            };\n            this.updateLocalCache();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  Resume.prototype.mkFileReq = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var data, result;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            data = __assign(__assign(__assign({\n              parts: this.uploadedList.map(function (value, index) {\n                return {\n                  etag: value.etag,\n                  // 接口要求 index 需要从 1 开始，所以需要整体 + 1\n                  partNumber: index + 1\n                };\n              }),\n              fname: this.putExtra.fname\n            }, this.putExtra.mimeType && {\n              mimeType: this.putExtra.mimeType\n            }), this.putExtra.customVars && {\n              customVars: this.putExtra.customVars\n            }), this.putExtra.metadata && {\n              metadata: this.putExtra.metadata\n            });\n            this.logger.info('parts upload completed, make file.', data);\n            return [4 /*yield*/, uploadComplete(this.token, this.key, this.getUploadInfo(), {\n              onCreate: function onCreate(xhr) {\n                return _this.addXhr(xhr);\n              },\n              body: JSON.stringify(data)\n            })];\n          case 1:\n            result = _a.sent();\n            this.logger.info('finish Resume Progress.');\n            this.updateMkFileProgress(1);\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  Resume.prototype.initBeforeUploadChunks = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var cachedInfo, res, infoMessage;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.uploadedList = [];\n            this.usedCacheList = [];\n            cachedInfo = utils.getLocalFileInfo(this.getLocalKey(), this.logger);\n            if (!!cachedInfo) return [3 /*break*/, 2];\n            this.logger.info('init upload parts from api.');\n            return [4 /*yield*/, initUploadParts(this.token, this.bucketName, this.key, this.uploadHost.getUrl())];\n          case 1:\n            res = _a.sent();\n            this.logger.info(\"initd upload parts of id: \" + res.data.uploadId + \".\");\n            this.uploadId = res.data.uploadId;\n            this.cachedUploadedList = [];\n            return [3 /*break*/, 3];\n          case 2:\n            infoMessage = ['resume upload parts from local cache,', \"total \" + cachedInfo.data.length + \" part,\", \"id is \" + cachedInfo.id + \".\"];\n            this.logger.info(infoMessage.join(' '));\n            this.cachedUploadedList = cachedInfo.data;\n            this.uploadId = cachedInfo.id;\n            _a.label = 3;\n          case 3:\n            this.chunks = utils.getChunks(this.file, this.config.chunkSize);\n            this.loaded = {\n              mkFileProgress: 0,\n              chunks: this.chunks.map(function (_) {\n                return 0;\n              })\n            };\n            this.notifyResumeProgress();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  Resume.prototype.getUploadInfo = function () {\n    return {\n      id: this.uploadId,\n      url: this.uploadHost.getUrl()\n    };\n  };\n  Resume.prototype.getLocalKey = function () {\n    return utils.createLocalKey(this.file.name, this.key, this.file.size);\n  };\n  Resume.prototype.updateLocalCache = function () {\n    utils.setLocalFileInfo(this.getLocalKey(), {\n      id: this.uploadId,\n      data: this.uploadedList\n    }, this.logger);\n  };\n  Resume.prototype.updateChunkProgress = function (loaded, index) {\n    this.loaded.chunks[index] = loaded;\n    this.notifyResumeProgress();\n  };\n  Resume.prototype.updateMkFileProgress = function (progress) {\n    this.loaded.mkFileProgress = progress;\n    this.notifyResumeProgress();\n  };\n  Resume.prototype.notifyResumeProgress = function () {\n    var _this = this;\n    this.progress = {\n      total: this.getProgressInfoItem(utils.sum(this.loaded.chunks) + this.loaded.mkFileProgress,\n      // FIXME: 不准确的 fileSize\n      this.file.size + 1 // 防止在 complete 未调用的时候进度显示 100%\n      ),\n      chunks: this.chunks.map(function (chunk, index) {\n        var fromCache = _this.usedCacheList[index];\n        return _this.getProgressInfoItem(_this.loaded.chunks[index], chunk.size, fromCache);\n      }),\n      uploadInfo: {\n        id: this.uploadId,\n        url: this.uploadHost.getUrl()\n      }\n    };\n    this.onData(this.progress);\n  };\n  return Resume;\n}(Base);\nexport default Resume;","map":{"version":3,"names":["uploadChunk","uploadComplete","initUploadParts","QiniuError","QiniuErrorName","QiniuRequestError","utils","Base","isPositiveInteger","n","re","test","String","Resume","_super","__extends","prototype","run","logger","info","config","chunkSize","InvalidChunkSize","initBeforeUploadChunks","_a","sent","pool","Pool","chunkInfo","__awaiter","_this","aborted","abort","Error","concurrentRequestLimit","mkFileResponse","localKey","getLocalKey","uploadChunks","chunks","map","chunk","index","enqueue","Promise","all","mkFileReq","error_1","code","removeLocalFileInfo","cachedInfo","cachedUploadedList","shouldCheckMD5","checkByMD5","reuseSaved","usedCacheList","updateChunkProgress","size","uploadedList","updateLocalCache","computeMd5","md5","onProgress","data","loaded","requestOptions","body","checkByServer","undefined","onCreate","xhr","addXhr","token","key","getUploadInfo","response","total","etag","__assign","parts","value","partNumber","fname","putExtra","mimeType","customVars","metadata","JSON","stringify","result","updateMkFileProgress","getLocalFileInfo","bucketName","uploadHost","getUrl","res","uploadId","infoMessage","length","id","join","getChunks","file","mkFileProgress","_","notifyResumeProgress","url","createLocalKey","name","setLocalFileInfo","progress","getProgressInfoItem","sum","fromCache","uploadInfo","onData"],"sources":["../../src/upload/resume.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}